[metadata]
license_file = "LICENSE"
description-file = "README.md"

[build-system]
requires = [
    "setuptools",
    "wheel",
]


[tool.check-manifest]
ignore = [
    "*.yml",
    ".github",
    ".github/*"
]


[tool.pytest.ini_options]
norecursedirs = [
    ".git",
    ".github",
    "dist",
    "build",
    "docs",
]
addopts = [
    "--strict-markers",
    "--doctest-modules",
    "--color=yes",
    "--disable-pytest-warnings",
]
markers = [
    "standalone: mark a test as standalone",
    "standalone_only: mark a test as standalone_only",
]
filterwarnings = [
    "error::FutureWarning",
]
xfail_strict = true
junit_duration_report = "call"
[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "pass",
]


[tool.docformatter]
recursive = true
# this need to be shorter as some docstings are r"""...
wrap-summaries = 119
wrap-descriptions = 120
blank = true


[tool.black]
# https://github.com/psf/black
line-length = 120
exclude = "(.eggs|.git|.hg|.mypy_cache|.venv|_build|buck-out|build|dist)"


[tool.mypy]
files = [
    "src",
]
install_types = true
non_interactive = true
disallow_untyped_defs = true
ignore_missing_imports = true
show_error_codes = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
allow_redefinition = true
# disable this rule as the Trainer attributes are defined in the connectors, not in its __init__
disable_error_code = "attr-defined"
# style choices
warn_no_return = false


[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E", "W",  # see: https://pypi.org/project/pycodestyle
    "F",  # see: https://pypi.org/project/pyflakes
    "I",  # Isort
    "D",  # see: https://pypi.org/project/pydocstyle
    "N",  # see: https://pypi.org/project/pep8-naming
]
extend-select = [
    "C4",  # see: https://pypi.org/project/flake8-comprehensions
    "PT",  # see: https://pypi.org/project/flake8-pytest-style
    "RET",  # see: https://pypi.org/project/flake8-return
    "SIM",  # see: https://pypi.org/project/flake8-simplify
]
ignore = [
    "E731",  # Do not assign a lambda expression, use a def
]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".eggs",
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "docs"
]

[tool.ruff.lint.per-file-ignores]
"setup.py" = ["D100", "SIM115"]
"__about__.py" = ["D100"]
"__init__.py" = ["D100"]
"docs/**" = ["D100", "D103"]
"src/**" = ["D100", "D102", "D104", "D107"]  # TODO: fix all of these
"examples/**" = ["D100", "D101", "D102", "D104", "D107"]  # TODO: fix all of these
"tests/**" = ["D100", "D101", "D102", "D103", "D104", "D107"]

[tool.ruff.pydocstyle]
# Use Google-style docstrings.
convention = "google"

#[tool.ruff.pycodestyle]
#ignore-overlong-task-comments = true

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
