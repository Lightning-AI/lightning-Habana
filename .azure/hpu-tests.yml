# Pipeline to run the HPU tests in DL1 Instance

trigger:
  tags:
    include: ["*"]
  branches:
    include:
      - "main"
      - "release/*"
      - "refs/tags/*"

pr:
  branches:
    include:
      - "main"
      - "release/*"

schedules:
- cron: '0 0 * * *'
  displayName: Daily midnight check
  branches:
    include: ["main"]

jobs:
  - job: testing
    # how long to run the job before automatically cancelling
    timeoutInMinutes: "35"
    # how much time to give 'run always even if cancelled tasks' before stopping them
    cancelTimeoutInMinutes: "2"
    strategy:
      matrix:
        'w. pytorch-lightning | pypi':
          image: "1.11.0/ubuntu20.04/habanalabs/pytorch-installer-2.0.1:1.11.0-587"
          dependency: "pytorch-lightning"
          pkg_source: "pypi"
        'w. lightning | pypi':
          image: "1.11.0/ubuntu20.04/habanalabs/pytorch-installer-2.0.1:1.11.0-587"
          dependency: "lightning"
          pkg_source: "pypi"
        'w. lightning | source':
          image: "1.11.0/ubuntu20.04/habanalabs/pytorch-installer-2.0.1:1.11.0-587"
          dependency: "lightning"
          pkg_source: "source"
    pool: "intel-hpus"
    container:
      image: "vault.habana.ai/gaudi-docker/$(image)"
      options: "--runtime=habana \
                -e HABANA_VISIBLE_DEVICES=all \
                -e OMPI_MCA_btl_vader_single_copy_mechanism=none \
                --cap-add=sys_nice \
                --ipc=host \
                --shm-size=4g \
                -v /usr/bin/docker:/tmp/docker:ro"
    variables:
      DEEPSPEED_VERSION: "1.11.0"
    workspace:
      clean: all

    steps:

    - script: |
        container_id=$(head -1 /proc/self/cgroup|cut -d/ -f3)
        /tmp/docker exec -t -u 0 $container_id \
          sh -c "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confold" -y install sudo"
        echo "##vso[task.setvariable variable=CONTAINER_ID]$container_id"
      displayName: 'Install Sudo in container (thanks Microsoft!)'

    - bash: |
        sudo pip install -q pip -U
        sudo apt-get install -y hwinfo
        hwinfo --short
        hl-smi -L
        lsmod | grep habanalabs
        python --version
      displayName: 'Instance HW info'

    - bash: |
        set -e
        pip --version
        pip install ".[test,$(dependency)]"
        pip install git+https://github.com/HabanaAI/DeepSpeed.git@$(DEEPSPEED_VERSION)
        pip list
      displayName: 'Install package & dependencies'

    - bash: |
        set -e
        pip install https://github.com/Lightning-AI/lightning/archive/refs/heads/release/stable.zip
        pip list
      condition: eq(variables['pkg_source'], 'source')
      displayName: 'OverInstall lightning from source'

    - bash: pip uninstall -y pytorch-lightning
      condition: eq(variables['dependency'], 'lightning')
      displayName: 'drop PL package'

    - bash: |
        # todo: consider test all files not listed as you may easily forget to add new
        python -m pytest -sv \
          test_fabric/test_hpu_accelerator.py \
          test_fabric/test_hpu_strategy.py \
          test_pytorch/test_accelerator.py \
          test_pytorch/test_deepspeed.py \
          --forked --junitxml=hpu_test-results.xml
      workingDirectory: tests/
      displayName: 'General HPU test'

    - bash: |
        python -m pytest -sv \
          test_pytorch/test_datamodule.py \
          test_pytorch/test_profiler.py \
          --forked --hpus 1 --junitxml=hpu1_test-results.xml
      workingDirectory: tests/
      displayName: 'Single card test'

    - bash: |
        set -ex
        python -m pytest -sv  test_pytorch/test_accelerator.py \
          --forked --hpus 8 --junitxml=hpu8_accel_test-results.xml
        python -m pytest -sv test_pytorch/test_profiler.py \
          --forked --hpus 8 --junitxml=hpu8_profiler_test-results.xml
      workingDirectory: tests/
      displayName: 'Multi card(8) HPU test'

    - bash: |
        python -m pytest -sv \
          test_pytorch/test_precision.py \
          --hmp-bf16 'test_pytorch/ops_bf16.txt' \
          --hmp-fp32 'test_pytorch/ops_fp32.txt' \
          --forked --junitxml=hpu_precision_test-results.xml
        LOWER_LIST=test_pytorch/ops_fp32.txt \
          FP32_LIST=test_pytorch/ops_bf16.txt \
          python -m pytest -sv test_pytorch/test_precision.py \
          -k test_autocast_operators_override --runxfail \
          --forked --junitxml=hpu_precision_test_override-results.xml
      workingDirectory: tests/
      displayName: 'HPU precision test'


    - bash: pip install ".[examples]"
      displayName: 'Install extra for examples'

    - bash: |
       export PYTHONPATH="${PYTHONPATH}:$(pwd)"
       python mnist_trainer.py
       LOWER_LIST=ops_fp32_mnist.txt FP32_LIST=ops_bf16_mnist.txt \
        python mnist_trainer.py -r autocast
      workingDirectory: examples/pytorch/
      displayName: 'Testing HPU examples'

    - task: PublishTestResults@2
      inputs:
        testResultsFiles: 'tests/*-results.xml'
        testRunTitle: '$(Build.DefinitionName) - Python $(python.version)'
      condition: succeededOrFailed()
      displayName: 'Publish test results'
